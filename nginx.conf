events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # 基础配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # 文件上传大小限制
    client_max_body_size 100M;

    server {
        listen 80;
        server_name localhost;

        # 根路径重定向或显示状态页面
        location / {
            return 200 "Mineru File Server is running\n";
            add_header Content-Type text/plain;
        }

        # 静态文件服务 - 为mineru输出文件提供HTTP访问
        location /output/ {
            alias /usr/share/nginx/html/mineru/output/;

            # 启用目录浏览（可选）
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;

            # 设置缓存头
            location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|json|md|txt)$ {
                expires 1h;
                add_header Cache-Control "public, immutable";
            }

            # CORS支持（如果需要跨域访问）
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range' always;

            # 处理预检请求
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # 文件不存在时返回404
            try_files $uri $uri/ =404;
        }

        # 健康检查端点
        location /health {
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Nginx状态页面（可选）
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker内网
            deny all;
        }
    }
}